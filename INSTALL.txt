Installation
============
I recommend getting the latest versions of Golem's dependencies from Git. If
you try to use Ubuntu packages, for example, you will tend to get very outdated
versions that don't work the same way.

To set up node.js:

    git clone https://github.com/joyent/node.git
    cd node
    ./configure
    make
    sudo make install
    cd ..

To set up nodeunit (for testing):

    git clone https://github.com/caolan/nodeunit.git
    cd nodeunit
    make
    sudo make install
    cd ..

To set up CoffeeScript (compiles .coffee files to JavaScript):

    git clone https://github.com/jashkenas/coffee-script.git
    cd coffee-script
    sudo bin/cake install
    cd ..

To set up Vowpal Wabbit (for extremely fast machine learning):

    git clone https://github.com/JohnLangford/vowpal_wabbit.git
    make
    sudo make install
    cd ..

Last I checked, you'll need to edit the Makefile to make VW compile on a Mac.

Getting model files
-------------------
You'll need a bunch of .vw files that are the result of training over the games
in the councilroom.com database. Alternatively, you could do the training
yourself (see Training), but this is much more difficult and time-consuming.

You can download some models from:

http://web.media.mit.edu/~rspeer/golem-model-20110714.tar.gz

Extract that file in this directory, so that it creates a subdirectory called
model/ containing the appropriate files.

Running the server
------------------
Compile the files:

    coffee -c *.coffee */*.coffee

Or if you're editing them a lot, run `coffee` as a daemon that auto-compiles:

    coffee -c -w *.coffee */*.coffee

(Yes, I should make a Makefile that does just this.)

Then:

    node server/server.js

Training
--------

To run the training script, you also need node-mongodb-native and access to
the CouncilRoom MongoDB. For some reason I didn't bother with the `make
install` step here -- instead, I assumed it would be in *this* directory.

    git clone https://github.com/christkv/node-mongodb-native.git
    cd node-mongodb-native
    make
    cd ../train

Now edit export_decks.coffee to have the correct server name in it, and
edit "mongo_password.txt" to be the password that a user named 'golem' can
authenticate against the DB with. Or just take that part out if you're using a
MongoDB without authentication.

Run `node export_decks.js`, `./buildscript.sh`, and `./trainscript.sh`. Check
the output of the training -- when I do it, turns 13 and 16 blow up and return
a useless model for some reason. Run them again with a single pass, and they
don't. Go figure.
